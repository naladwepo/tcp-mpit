#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ API
–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API –∑–∞–ø—É—â–µ–Ω: uvicorn src.api.main:app --reload
"""

import requests
import json
from pathlib import Path

API_URL = "http://localhost:8000"

def test_generate_both():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±–æ–∏—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ API"""
    
    print("=" * 70)
    print("  –¢–ï–°–¢: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è DOCX –∏ PDF —á–µ—Ä–µ–∑ API")
    print("=" * 70)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API...")
    try:
        response = requests.get(f"{API_URL}/health", timeout=5)
        if response.status_code == 200:
            print("‚úì API –¥–æ—Å—Ç—É–ø–µ–Ω")
            health = response.json()
            print(f"  –°—Ç–∞—Ç—É—Å: {health.get('status')}")
            print(f"  LLM: {health.get('llm_available')}")
        else:
            print("‚úó API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
    except:
        print("‚úó API –Ω–µ –∑–∞–ø—É—â–µ–Ω!")
        print("  –ó–∞–ø—É—Å—Ç–∏—Ç–µ: uvicorn src.api.main:app --reload")
        return
    
    print()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    query = "–ö–æ—Ä–æ–± 200x200 –∏ –∫—Ä—ã—à–∫–∞"
    
    print(f"üìù –ó–∞–ø—Ä–æ—Å: {query}")
    print()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–±–∞ —Ñ–æ—Ä–º–∞—Ç–∞
    print("üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")
    
    try:
        response = requests.post(
            f"{API_URL}/generate/both",
            json={"query": query, "use_llm": True},
            timeout=120
        )
        
        if response.status_code == 200:
            result = response.json()
            
            print("‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã!")
            print()
            
            print("üìÑ Word –¥–æ–∫—É–º–µ–Ω—Ç:")
            print(f"   –ò–º—è: {result['files']['word']['filename']}")
            print(f"   URL: {API_URL}{result['files']['word']['download_url']}")
            print()
            
            print("üìï PDF –¥–æ–∫—É–º–µ–Ω—Ç:")
            print(f"   –ò–º—è: {result['files']['pdf']['filename']}")
            print(f"   URL: {API_URL}{result['files']['pdf']['download_url']}")
            print()
            
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã
            print("‚¨áÔ∏è  –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
            
            # Word
            word_url = f"{API_URL}{result['files']['word']['download_url']}"
            word_response = requests.get(word_url)
            word_filename = f"downloaded_{result['files']['word']['filename']}"
            
            with open(word_filename, 'wb') as f:
                f.write(word_response.content)
            print(f"   ‚úì Word —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {word_filename}")
            
            # PDF
            pdf_url = f"{API_URL}{result['files']['pdf']['download_url']}"
            pdf_response = requests.get(pdf_url)
            pdf_filename = f"downloaded_{result['files']['pdf']['filename']}"
            
            with open(pdf_filename, 'wb') as f:
                f.write(pdf_response.content)
            print(f"   ‚úì PDF —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {pdf_filename}")
            
            print()
            print("=" * 70)
            print("‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            print()
            print("üí° –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª—ã:")
            print(f"   open {word_filename}")
            print(f"   open {pdf_filename}")
            print()
            
        else:
            print(f"‚úó –û—à–∏–±–∫–∞: {response.status_code}")
            print(response.text)
            
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    test_generate_both()
