#!/usr/bin/env python3
"""
–î–ï–ú–û: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¢–ö–ü –¥–æ–∫—É–º–µ–Ω—Ç–∞
–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
"""

from src.document_generator import DocumentGenerator

# –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–∏—Å–∫–∞
example_data = {
    "original_query": "–ö–æ–º–ø–ª–µ–∫—Ç –¥–ª—è –º–æ–Ω—Ç–∞–∂–∞ –∫–æ—Ä–æ–±–∞ 200x200: –∫–æ—Ä–æ–±, –∫—Ä—ã—à–∫–∞, –≤–∏–Ω—Ç—ã",
    "items": [
        {
            "requested_item": "–ö–æ—Ä–æ–± 200x200",
            "quantity": 2,
            "found_product": {
                "name": "–ö–æ—Ä–æ–± 200x200 –º–º, L=2000 –º–º, –≥–æ—Ä—è—á–µ–µ —Ü–∏–Ω–∫–æ–≤–∞–Ω–∏–µ, —Ç–æ–ª—â–∏–Ω–∞ –ø–æ–∫—Ä—ã—Ç–∏—è –Ω–µ –º–µ–Ω–µ–µ 80 –º–∫–º",
                "cost": 88498.0
            },
            "specifications": "200x200 –º–º, –¥–ª–∏–Ω–∞ 2000 –º–º",
            "unit_price": 88498.0,
            "total_price": 176996.0
        },
        {
            "requested_item": "–ö—Ä—ã—à–∫–∞ –¥–ª—è –∫–æ—Ä–æ–±–∞ 200x200",
            "quantity": 2,
            "found_product": {
                "name": "–ö—Ä—ã—à–∫–∞ 200 –º–º, L=2000 –º–º, –≥–æ—Ä—è—á–µ–µ —Ü–∏–Ω–∫–æ–≤–∞–Ω–∏–µ, —Ç–æ–ª—â–∏–Ω–∞ –ø–æ–∫—Ä—ã—Ç–∏—è –Ω–µ –º–µ–Ω–µ–µ 80 –º–∫–º",
                "cost": 45131.0
            },
            "specifications": "200 –º–º, –¥–ª–∏–Ω–∞ 2000 –º–º",
            "unit_price": 45131.0,
            "total_price": 90262.0
        },
        {
            "requested_item": "–í–∏–Ω—Ç—ã –¥–ª—è –º–æ–Ω—Ç–∞–∂–∞",
            "quantity": 20,
            "found_product": {
                "name": "–í–∏–Ω—Ç —Å –∫—Ä–µ—Å—Ç–æ–æ–±—Ä–∞–∑–Ω—ã–º —à–ª–∏—Ü–µ–º –ú6—Ö10",
                "cost": 100.0
            },
            "specifications": "–ú6—Ö10, –æ—Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω—ã–π",
            "unit_price": 100.0,
            "total_price": 2000.0
        }
    ]
}

def main():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    
    print("=" * 70)
    print("  –î–ï–ú–û: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¢–ö–ü –¥–æ–∫—É–º–µ–Ω—Ç–∞")
    print("=" * 70)
    print()
    
    # –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
    print("üìÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞...")
    generator = DocumentGenerator(output_dir="generated_documents")
    print("‚úì –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≥–æ—Ç–æ–≤")
    print()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Word –¥–æ–∫—É–º–µ–Ω—Ç
    print("üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Word –¥–æ–∫—É–º–µ–Ω—Ç–∞...")
    word_file = generator.generate_word(example_data, "demo_tkp.docx")
    print(f"‚úì Word –¥–æ–∫—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω: {word_file}")
    print(f"  –†–∞–∑–º–µ—Ä: {word_file.stat().st_size / 1024:.1f} KB")
    print()
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º
    print("üìä –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞:")
    print(f"  –ó–∞–ø—Ä–æ—Å: {example_data['original_query']}")
    print(f"  –¢–æ–≤–∞—Ä–æ–≤: {len(example_data['items'])}")
    
    total_cost = sum(item['total_price'] for item in example_data['items'])
    print(f"  –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {total_cost:,.2f} ‚ÇΩ")
    print()
    
    print("=" * 70)
    print("‚úÖ –î–µ–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print()
    print("üìÅ –î–æ–∫—É–º–µ–Ω—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤: generated_documents/demo_tkp.docx")
    print("üí° –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –≤ Word/LibreOffice –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
    print()


if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
